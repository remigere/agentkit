diff --git a/-R b/-R
new file mode 100644
index 0000000..e69de29
diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
new file mode 100644
index 0000000..c2370af
--- /dev/null
+++ b/.pre-commit-config.yaml
@@ -0,0 +1,88 @@
+default_language_version:
+    python: python3.10
+repos:
+-   repo: https://github.com/pre-commit/pre-commit-hooks
+    rev: v2.3.0
+    hooks:
+    - id: check-yaml
+      args: [--allow-multiple-documents, --unsafe]
+    - id: end-of-file-fixer
+    - id: trailing-whitespace
+    - id: check-added-large-files
+    - id: check-merge-conflict
+    - id: fix-encoding-pragma
+
+-   repo: https://github.com/PyCQA/flake8
+    rev: 4.0.1
+    hooks:
+    -   id: flake8
+        types: [python]
+        args: [--max-line-length=88, "--ignore=E203,W503,E501,E231,E741,E722,F401,E203,W"]
+
+-   repo: https://github.com/pycqa/isort
+    rev: 5.13.2
+    hooks:
+      - id: isort
+        name: isort (python)
+        types: [python]
+        args: [--settings-path, backend/app/pyproject.toml]
+        additional_dependencies: ["toml"]
+
+-   repo: https://github.com/kynan/nbstripout
+    rev: 0.5.0
+    hooks:
+      - id: nbstripout
+        types: [python]
+
+-   repo: https://github.com/psf/black
+    rev: 23.12.1
+    hooks:
+      - id: black
+        name: black (python)
+        types: [python]
+        args: [--config, backend/app/pyproject.toml]
+
+-   repo: https://github.com/pappasam/toml-sort
+    rev: v0.20.0
+    hooks:
+      - id: toml-sort
+        pass_filenames: false
+        always_run: true
+        args: [backend/app/pyproject.toml, --all, --in-place]
+        types: [python]
+
+-   repo: https://github.com/myint/docformatter
+    rev: v1.4
+    hooks:
+      - id: docformatter
+        args: ["--in-place", "--pre-summary-newline", "--wrap-descriptions=88", "--wrap-summaries=88"]
+        types: [python]
+
+-   repo: local
+    hooks:
+    -   id: pylint-local
+        name: pylint
+        entry: backend/app/.venv/bin/python3.10 -m pylint --rcfile=backend/app/.pylintrc --load-plugins=pylint_pydantic backend/app/app
+        language: system
+        types: [python]
+        require_serial: true
+        pass_filenames: false
+
+-   repo: local
+    hooks:
+    -   id: mypy-local
+        name: mypy
+        entry: backend/app/.venv/bin/python3.10 -m mypy --config-file=backend/app/setup.cfg backend/app/app
+        language: system
+        types: [python]
+        require_serial: true
+        pass_filenames: false
+
+-   repo: local
+    hooks:
+    -   id: husky-run-pre-commit
+        name: husky
+        language: system
+        entry: bash frontend/.husky/pre-commit
+        pass_filenames: false
+        always_run: true
diff --git a/.vscode/launch.json b/.vscode/launch.json
index cb0f970..14c21f4 100644
--- a/.vscode/launch.json
+++ b/.vscode/launch.json
@@ -1,6 +1,7 @@
 {
   "version": "0.2.0",
   "configurations": [
+
       {
           "name": "Debug: Attach to FastAPI Docker",
           "type": "python",
@@ -14,13 +15,28 @@
               }
           ],
       },
-      {
-        "name": "Run current file",
-        "type": "python",
-        "request": "launch",
-        "program": "${file}",
-        "console": "integratedTerminal",
-        "envFile": "${workspaceFolder}/.env"
-    },
+      // {
+      //   "name": "Attach to Next.js",
+      //   "type": "node",
+      //   "request": "attach",
+      //   "port": 9229,
+      //   "restart": true,
+      //   "sourceMaps": true,
+      //   "protocol": "inspector",
+      //   "localRoot": "${workspaceFolder}/frontend",
+      //   "remoteRoot": "/code",
+      //   "skipFiles": [
+      //     "<node_internals>/**"
+      //   ]
+      // }
+    //   {
+    //     "name": "Run current file",
+    //     "type": "python",
+    //     "request": "launch",
+    //     "program": "${file}",
+    //     "console": "integratedTerminal",
+    //     "envFile": "${workspaceFolder}/.env",
+    //     "stopOnEntry": true,
+    // },
   ]
 }
diff --git a/Debug: Attach to FastAPI Docker b/Debug: Attach to FastAPI Docker
new file mode 100644
index 0000000..e69de29
diff --git a/backend/app/app/api/v1/endpoints/chat.py b/backend/app/app/api/v1/endpoints/chat.py
index eb32777..321b491 100644
--- a/backend/app/app/api/v1/endpoints/chat.py
+++ b/backend/app/app/api/v1/endpoints/chat.py
@@ -73,7 +73,7 @@ async def agent_chat(
     Returns:
         StreamingResponse: The streaming response of the conversation.
     """
-    logger.info(f"User JWT from request: {jwt}")
+    logger.info(f"**** User JWT from request: {jwt}")
 
     api_key = chat.api_key
     if api_key is None or api_key == "":
@@ -105,7 +105,7 @@ async def agent_chat(
             stream_handler,
         )
     )
-
+    
     return StreamingJsonListResponse(
         event_generator(stream_handler),
         media_type="text/plain",
diff --git a/backend/app/app/config/agent.yml b/backend/app/app/config/agent.yml
index 91fddcc..d33e9e7 100644
--- a/backend/app/app/config/agent.yml
+++ b/backend/app/app/config/agent.yml
@@ -1,7 +1,7 @@
 ---
 tools_library: !include tools.yml
 common: # settings shared by agent and all tools (can be overwritten by passing explicitly to constructors)
-  llm: 'gpt-4'
+  llm: 'gpt-3.5-turbo'
   fast_llm: 'gpt-3.5-turbo'
   fast_llm_token_limit: 2500
   max_token_length: 4000
diff --git a/backend/app/app/main.py b/backend/app/app/main.py
index 923c3a3..a72535f 100644
--- a/backend/app/app/main.py
+++ b/backend/app/app/main.py
@@ -25,6 +25,7 @@ from app.core.fastapi import FastAPIWithInternalModels
 from app.utils.config_loader import load_agent_config, load_ingestion_configs
 from app.utils.fastapi_globals import GlobalsMiddleware, g
 
+# debugger;
 
 async def user_id_identifier(request: Request) -> str:
     """Identify the user from the request."""
diff --git a/backend/app/app/services/chat_agent/tools/agentkit.code-workspace b/backend/app/app/services/chat_agent/tools/agentkit.code-workspace
new file mode 100644
index 0000000..0903e3f
--- /dev/null
+++ b/backend/app/app/services/chat_agent/tools/agentkit.code-workspace
@@ -0,0 +1,23 @@
+{
+	"folders": [
+		{
+			"name": "agentkit",
+			"path": "../../../../../.."
+		}
+	],
+	"settings": {
+		"python.defaultInterpreterPath": "${workspaceFolder}/backend/app/.venv/bin/python",
+		"python.analysis.extraPaths": [
+			"backend/app"
+		],
+		"python.autoComplete.extraPaths": [
+			"backend/app"
+		],
+		"python.analysis.autoImportCompletions": true,
+		"python.languageServer": "Pylance",
+		"editor.codeActionsOnSave": {
+			"source.fixAll": "explicit",
+			"source.fixAll.eslint": "explicit"
+		}
+	}
+}
\ No newline at end of file
diff --git a/docker-compose-demo.yml b/docker-compose-demo.yml
index db3a87c..1d3d5a4 100644
--- a/docker-compose-demo.yml
+++ b/docker-compose-demo.yml
@@ -2,6 +2,7 @@ version: '3.8'
 
 services:
   fastapi_server:
+    platform: linux/amd64  # Specify platform here
     container_name: fastapi_server
     build: ./backend
     restart: always
@@ -15,6 +16,7 @@ services:
       - database
 
   nextjs_server:
+    platform: linux/amd64  # Specify platform here
     container_name: nextjs_server
     build: ./frontend
     restart: always
@@ -30,6 +32,7 @@ services:
       - fastapi_server
 
   database:
+    platform: linux/amd64  # Specify platform here
     image: ankane/pgvector:v0.4.1
     restart: always
     container_name: database
@@ -55,6 +58,7 @@ services:
       retries: 5
 
   redis_server:
+    platform: linux/amd64  # Specify platform here
     image: redis:alpine
     container_name: redis_server
     restart: always
@@ -62,9 +66,10 @@ services:
       - 6379:6379 # Remove this on production
     expose:
       - 6379
-    env_file: ".env"
+    env_file: .env
 
   caddy_reverse_proxy:
+    platform: linux/amd64  # Specify platform here
     container_name: caddy_reverse_proxy
     image: caddy:alpine
     restart: always
diff --git a/docker-compose-demo_backup.yml b/docker-compose-demo_backup.yml
new file mode 100644
index 0000000..1d3d5a4
--- /dev/null
+++ b/docker-compose-demo_backup.yml
@@ -0,0 +1,95 @@
+version: '3.8'
+
+services:
+  fastapi_server:
+    platform: linux/amd64  # Specify platform here
+    container_name: fastapi_server
+    build: ./backend
+    restart: always
+    command: "sh -c 'alembic upgrade head && python app/document_ingestion.py  && uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 9090'"
+    volumes:
+      - ./backend/app:/code
+    expose:
+      - 9090
+    env_file: ".env"
+    depends_on:
+      - database
+
+  nextjs_server:
+    platform: linux/amd64  # Specify platform here
+    container_name: nextjs_server
+    build: ./frontend
+    restart: always
+    command: "sh -c 'node server.js'"
+    volumes:
+      - ./frontend:/code
+    ports:
+      - 3000:3000
+    expose:
+      - 3000
+    env_file: "frontend/.env"
+    depends_on:
+      - fastapi_server
+
+  database:
+    platform: linux/amd64  # Specify platform here
+    image: ankane/pgvector:v0.4.1
+    restart: always
+    container_name: database
+    env_file: ".env"
+    user: root
+    volumes:
+      - ./db_docker:/var/lib/postgresql
+      - ./scripts/1-create-dbs.sql:/docker-entrypoint-initdb.d/1-create-dbs.sql
+      - ./scripts/sql_db_tool/2-chinook_psql_load.sql:/docker-entrypoint-initdb.d/2-chinook_psql_load.sql
+    ports:
+      - 5432:5432
+    expose:
+      - 5432
+    environment:
+      - POSTGRES_USERNAME=${DATABASE_USER}
+      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
+      - POSTGRES_DATABASE=${DATABASE_NAME}
+      - POSTGRES_HOST_AUTH_METHOD= "trust"
+    healthcheck:
+      test: ["CMD-SHELL", "pg_isready -U postgres"]
+      interval: 10s
+      timeout: 15s
+      retries: 5
+
+  redis_server:
+    platform: linux/amd64  # Specify platform here
+    image: redis:alpine
+    container_name: redis_server
+    restart: always
+    ports:
+      - 6379:6379 # Remove this on production
+    expose:
+      - 6379
+    env_file: .env
+
+  caddy_reverse_proxy:
+    platform: linux/amd64  # Specify platform here
+    container_name: caddy_reverse_proxy
+    image: caddy:alpine
+    restart: always
+    ports:
+      - 80:80
+      - 9090:9090
+      - 3001:3001
+      - 443:443
+    environment:
+      - EXT_ENDPOINT1=${EXT_ENDPOINT1}
+      - LOCAL_1=${LOCAL_1}
+      - LOCAL_2=${LOCAL_2}
+    volumes:
+      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
+      - caddy_data:/data
+      - caddy_config:/config
+
+
+volumes:
+  caddy_data:
+  caddy_config:
+  langchain-db-data:
+  langchain-redis-data:
diff --git a/docker-compose-development.yml b/docker-compose-development.yml
index 213ab4c..20a2f7e 100644
--- a/docker-compose-development.yml
+++ b/docker-compose-development.yml
@@ -2,15 +2,16 @@ version: '3.8'
 
 services:
   fastapi_server:
+    platform: linux/amd64  # Specify platform here
     container_name: fastapi_server
     build: ./backend
     restart: always
+    # command: "sh -c 'alembic upgrade head && python app/document_ingestion.py  && uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 9090'"
     # Enable debug mode run .vscode/launch.json -> "Debug: Attach to FastAPI Docker"
-    # command: "sh -c 'pip install debugpy -t /tmp && alembic upgrade head && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 9090 --loop asyncio'"
-    # ports:
-    #   - 5678:5678
+    command: "sh -c 'pip install debugpy -t /tmp && alembic upgrade head && python /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 9090 --loop asyncio'"
+    ports:
+      - 5678:5678
     # Disable debug mode if only frontend development
-    command: "sh -c 'alembic upgrade head && python app/document_ingestion.py && uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 9090'"
     volumes:
       - ./backend/app:/code
     expose:
@@ -19,7 +20,26 @@ services:
     depends_on:
       - database
 
+  nextjs_server:
+    platform: linux/amd64  # Specify platform here
+    container_name: nextjs_server
+    build: ./frontend
+    restart: always
+    command: "sh -c 'node server.js'"
+    # command: "node --inspect=0.0.0.0:9229 -r ts-node/register server.js"
+    volumes:
+      - ./frontend:/code
+    ports:
+      - 3000:3000
+      - 9229:9229
+    expose:
+      - 3000
+    env_file: "frontend/.env"
+    depends_on:
+      - fastapi_server
+
   database:
+    platform: linux/amd64  # Specify platform here
     image: ankane/pgvector:v0.4.1
     restart: always
     container_name: database
@@ -28,6 +48,7 @@ services:
     volumes:
       - ./db_docker:/var/lib/postgresql
       - ./scripts/1-create-dbs.sql:/docker-entrypoint-initdb.d/1-create-dbs.sql
+      - ./scripts/sql_db_tool/2-chinook_psql_load.sql:/docker-entrypoint-initdb.d/2-chinook_psql_load.sql
     ports:
       - 5432:5432
     expose:
@@ -37,8 +58,14 @@ services:
       - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
       - POSTGRES_DATABASE=${DATABASE_NAME}
       - POSTGRES_HOST_AUTH_METHOD= "trust"
+    healthcheck:
+      test: ["CMD-SHELL", "pg_isready -U postgres"]
+      interval: 10s
+      timeout: 15s
+      retries: 5
 
   redis_server:
+    platform: linux/amd64  # Specify platform here
     image: redis:alpine
     container_name: redis_server
     restart: always
@@ -49,12 +76,14 @@ services:
     env_file: .env
 
   caddy_reverse_proxy:
+    platform: linux/amd64  # Specify platform here
     container_name: caddy_reverse_proxy
     image: caddy:alpine
     restart: always
     ports:
       - 80:80
       - 9090:9090
+      - 3001:3001
       - 443:443
     environment:
       - EXT_ENDPOINT1=${EXT_ENDPOINT1}
diff --git a/frontend/Dockerfile b/frontend/Dockerfile
index 198d7d1..2f6b129 100644
--- a/frontend/Dockerfile
+++ b/frontend/Dockerfile
@@ -4,15 +4,17 @@ FROM node:18-alpine AS base
 FROM base AS deps
 # Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
 RUN apk add --no-cache libc6-compat
-WORKDIR /app
+WORKDIR /code
 
 COPY package.json pnpm-lock.yaml* ./
 RUN yarn global add pnpm && pnpm i --frozen-lockfile
+RUN pnpm add ts-node typescript
 
 # Rebuild the source code only when needed
 FROM base AS builder
-WORKDIR /app
-COPY --from=deps /app/node_modules ./node_modules
+WORKDIR /code
+COPY --from=deps /code/node_modules ./node_modules
+
 COPY . .
 
 # Declare all build args are env vars for build
@@ -32,19 +34,19 @@ RUN yarn run build
 
 # Production image, copy all the files and run next
 FROM base AS runner
-WORKDIR /app
+WORKDIR /code
 
 ENV NODE_ENV production
 
 RUN addgroup --system --gid 1001 nodejs
 RUN adduser --system --uid 1001 nextjs
 
-COPY --from=builder /app/public ./public
+COPY --from=builder /code/public ./public
 
 # Automatically leverage output traces to reduce image size
 # https://nextjs.org/docs/advanced-features/output-file-tracing
-COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
-COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static
+COPY --from=builder --chown=nextjs:nodejs /code/.next/standalone ./
+COPY --from=builder --chown=nextjs:nodejs /code/.next/static ./.next/static
 
 USER nextjs
 
@@ -53,3 +55,4 @@ EXPOSE 3000
 ENV PORT 3000
 
 CMD ["node", "server.js"]
+# CMD ["node", "--inspect=0.0.0.0:9229", "-r", "ts-node/register", "server.js"]
diff --git a/frontend/agentkit.code-workspace b/frontend/agentkit.code-workspace
new file mode 100644
index 0000000..2a0ed79
--- /dev/null
+++ b/frontend/agentkit.code-workspace
@@ -0,0 +1,7 @@
+{
+	"folders": [
+		{
+			"path": ".."
+		}
+	]
+}
\ No newline at end of file
diff --git a/frontend/custom_typings/can-ndjson-stream/index.d.ts b/frontend/custom_typings/can-ndjson-stream/index.d.ts
index f110d24..389521f 100644
--- a/frontend/custom_typings/can-ndjson-stream/index.d.ts
+++ b/frontend/custom_typings/can-ndjson-stream/index.d.ts
@@ -9,3 +9,4 @@ declare module "can-ndjson-stream" {
     cancel: () => void
   }
 }
+e
diff --git a/frontend/package.json b/frontend/package.json
index 2dbf44a..3fdea3e 100644
--- a/frontend/package.json
+++ b/frontend/package.json
@@ -67,6 +67,7 @@
     "rehype-raw": "^6.1.1",
     "remark-gfm": "^3.0.1",
     "styled-components": "5",
+    "ts-node": "^10.9.2",
     "uuid": "^9.0.0",
     "zod": "^3.22.4",
     "zustand": "^4.3.8"
diff --git a/frontend/pnpm-lock.yaml b/frontend/pnpm-lock.yaml
index 0396de9..d91adc5 100644
--- a/frontend/pnpm-lock.yaml
+++ b/frontend/pnpm-lock.yaml
@@ -1,4 +1,4 @@
-lockfileVersion: '6.1'
+lockfileVersion: '6.0'
 
 settings:
   autoInstallPeers: true
@@ -125,6 +125,9 @@ dependencies:
   styled-components:
     specifier: '5'
     version: 5.3.11(@babel/core@7.23.7)(react-dom@18.2.0)(react-is@18.2.0)(react@18.2.0)
+  ts-node:
+    specifier: ^10.9.2
+    version: 10.9.2(@types/node@18.15.5)(typescript@5.3.3)
   uuid:
     specifier: ^9.0.0
     version: 9.0.0
@@ -210,7 +213,7 @@ devDependencies:
     version: 13.6.2
   daisyui:
     specifier: ^3.9.4
-    version: 3.9.4
+    version: 3.9.4(ts-node@10.9.2)
   eslint:
     specifier: ^8.56.0
     version: 8.56.0
@@ -237,7 +240,7 @@ devDependencies:
     version: 8.0.3
   jest:
     specifier: ^29.7.0
-    version: 29.7.0(@types/node@18.15.5)
+    version: 29.7.0(@types/node@18.15.5)(ts-node@10.9.2)
   npm-only-allow:
     specifier: ^1.2.6
     version: 1.2.6
@@ -261,7 +264,7 @@ devDependencies:
     version: 22.0.12(typescript@5.3.3)
   tailwindcss:
     specifier: ^3.4.0
-    version: 3.4.0
+    version: 3.4.0(ts-node@10.9.2)
   ts-jest:
     specifier: ^29.1.1
     version: 29.1.1(@babel/core@7.23.7)(esbuild@0.19.11)(jest@29.7.0)(typescript@5.3.3)
@@ -864,6 +867,12 @@ packages:
       chalk: 4.1.2
     dev: true
 
+  /@cspotcode/source-map-support@0.8.1:
+    resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}
+    engines: {node: '>=12'}
+    dependencies:
+      '@jridgewell/trace-mapping': 0.3.9
+
   /@cucumber/ci-environment@10.0.0:
     resolution: {integrity: sha512-lRkiehckosIOdc7p1L44nZsttO5dVHFjpwKKWZ07x8SeoAdV/sPuGe1PISe0AmAowFGza62nMOgG4KaroGzwFQ==}
     dev: true
@@ -1459,7 +1468,7 @@ packages:
       slash: 3.0.0
     dev: true
 
-  /@jest/core@29.7.0:
+  /@jest/core@29.7.0(ts-node@10.9.2):
     resolution: {integrity: sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==}
     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
     peerDependencies:
@@ -1480,7 +1489,7 @@ packages:
       exit: 0.1.2
       graceful-fs: 4.2.11
       jest-changed-files: 29.7.0
-      jest-config: 29.7.0(@types/node@18.19.5)
+      jest-config: 29.7.0(@types/node@18.19.5)(ts-node@10.9.2)
       jest-haste-map: 29.7.0
       jest-message-util: 29.7.0
       jest-regex-util: 29.6.3
@@ -1689,6 +1698,12 @@ packages:
       '@jridgewell/resolve-uri': 3.1.0
       '@jridgewell/sourcemap-codec': 1.4.14
 
+  /@jridgewell/trace-mapping@0.3.9:
+    resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}
+    dependencies:
+      '@jridgewell/resolve-uri': 3.1.0
+      '@jridgewell/sourcemap-codec': 1.4.15
+
   /@jsdevtools/ono@7.1.3:
     resolution: {integrity: sha512-4JQNk+3mVzK3xh2rqd6RB4J46qUR19azEHBneZyTZM+c456qOrbbM/5xcR8huNCCcbVt7+UmizG6GuUvPvKUYg==}
     dev: true
@@ -2613,7 +2628,7 @@ packages:
       lodash.isplainobject: 4.0.6
       lodash.merge: 4.6.2
       postcss-selector-parser: 6.0.10
-      tailwindcss: 3.4.0
+      tailwindcss: 3.4.0(ts-node@10.9.2)
     dev: false
 
   /@teppeis/multimaps@3.0.0:
@@ -2621,6 +2636,18 @@ packages:
     engines: {node: '>=14'}
     dev: true
 
+  /@tsconfig/node10@1.0.11:
+    resolution: {integrity: sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==}
+
+  /@tsconfig/node12@1.0.11:
+    resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}
+
+  /@tsconfig/node14@1.0.3:
+    resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}
+
+  /@tsconfig/node16@1.0.4:
+    resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}
+
   /@turf/area@6.5.0:
     resolution: {integrity: sha512-xCZdiuojokLbQ+29qR6qoMD89hv+JAgWjLrwSEWL+3JV8IXKeNFl6XkEJz9HGkVpnXvQKJoRz4/liT+8ZZ5Jyg==}
     dependencies:
@@ -2825,7 +2852,6 @@ packages:
 
   /@types/node@18.15.5:
     resolution: {integrity: sha512-Ark2WDjjZO7GmvsyFFf81MXuGTA/d6oP38anyxWOL6EREyBKAxKoFHwBhaZxCfLRLpO8JgVXwqOwSwa7jRcjew==}
-    dev: true
 
   /@types/node@18.19.5:
     resolution: {integrity: sha512-22MG6T02Hos2JWfa1o5jsIByn+bc5iOt1IS4xyg6OG68Bu+wMonVZzdrgCw693++rpLE9RUT/Bx15BeDzO0j+g==}
@@ -3177,7 +3203,6 @@ packages:
   /acorn-walk@8.2.0:
     resolution: {integrity: sha512-k+iyHEuPgSw6SbuDpGQM+06HQUa04DZ3o+F6CSzXMvvI5KMvnaEqXe+YVe555R9nn6GPt404fos4wcgpw12SDA==}
     engines: {node: '>=0.4.0'}
-    dev: true
 
   /acorn@7.4.1:
     resolution: {integrity: sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==}
@@ -3188,7 +3213,6 @@ packages:
   /acorn@8.11.3:
     resolution: {integrity: sha512-Y9rRfJG5jcKOE0CLisYbojUjIrIEE7AGMzA/Sm4BslANhbS+cDMpgBdcPT91oJ7OuJ9hYJBx59RjbhxVnrF8Xg==}
     engines: {node: '>=0.4.0'}
-    dev: true
 
   /acorn@8.8.2:
     resolution: {integrity: sha512-xjIYgE8HBrkpd/sJqOGNspf8uHG+NOHGOw6a/Urj8taM2EXfdNAH2oFcPeIFfsv3+kz/mJrS5VuMqbNLjCa2vw==}
@@ -3321,6 +3345,9 @@ packages:
     resolution: {integrity: sha512-Of/R0wqp83cgHozfIYLbBMnej79U/SVGOOyuB3VVFv1NRM/PSFMK12x9KVtiYzJqmnU5WR2qp0Z5rHb7sWGnFQ==}
     dev: true
 
+  /arg@4.1.3:
+    resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}
+
   /arg@5.0.2:
     resolution: {integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==}
 
@@ -4333,7 +4360,7 @@ packages:
     resolution: {integrity: sha512-iSPlClZP8vX7MC3/u6s3lrDuoQyhQukh5LyABJ3hvfzbQ3Yyayd4fp04zjLnfi267B/B2FkumcWWgrbban7sSA==}
     dev: true
 
-  /create-jest@29.7.0(@types/node@18.15.5):
+  /create-jest@29.7.0(@types/node@18.15.5)(ts-node@10.9.2):
     resolution: {integrity: sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==}
     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
     dependencies:
@@ -4341,7 +4368,7 @@ packages:
       chalk: 4.1.2
       exit: 0.1.2
       graceful-fs: 4.2.11
-      jest-config: 29.7.0(@types/node@18.15.5)
+      jest-config: 29.7.0(@types/node@18.15.5)(ts-node@10.9.2)
       jest-util: 29.7.0
       prompts: 2.4.2
     transitivePeerDependencies:
@@ -4351,6 +4378,9 @@ packages:
       - ts-node
     dev: true
 
+  /create-require@1.1.1:
+    resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}
+
   /cross-spawn@7.0.3:
     resolution: {integrity: sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==}
     engines: {node: '>= 8'}
@@ -4653,7 +4683,7 @@ packages:
       type: 1.2.0
     dev: true
 
-  /daisyui@3.9.4:
+  /daisyui@3.9.4(ts-node@10.9.2):
     resolution: {integrity: sha512-fvi2RGH4YV617/6DntOVGcOugOPym9jTGWW2XySb5ZpvdWO4L7bEG77VHirrnbRUEWvIEVXkBpxUz2KFj0rVnA==}
     engines: {node: '>=16.9.0'}
     dependencies:
@@ -4661,7 +4691,7 @@ packages:
       css-selector-tokenizer: 0.8.0
       postcss: 8.4.32
       postcss-js: 4.0.1(postcss@8.4.32)
-      tailwindcss: 3.4.0
+      tailwindcss: 3.4.0(ts-node@10.9.2)
     transitivePeerDependencies:
       - ts-node
     dev: true
@@ -4895,7 +4925,6 @@ packages:
   /diff@4.0.2:
     resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}
     engines: {node: '>=0.3.1'}
-    dev: true
 
   /diff@5.0.0:
     resolution: {integrity: sha512-/VTCrvm5Z0JGty/BWHljh+BAiw3IK+2j87NGMu8Nwc/f48WoDAC395uomO9ZD117ZOBaHmkX1oyLvkVM/aIT3w==}
@@ -5666,7 +5695,7 @@ packages:
       '@typescript-eslint/eslint-plugin': 6.17.0(@typescript-eslint/parser@6.17.0)(eslint@8.56.0)(typescript@5.3.3)
       '@typescript-eslint/utils': 5.62.0(eslint@8.56.0)(typescript@5.3.3)
       eslint: 8.56.0
-      jest: 29.7.0(@types/node@18.15.5)
+      jest: 29.7.0(@types/node@18.15.5)(ts-node@10.9.2)
     transitivePeerDependencies:
       - supports-color
       - typescript
@@ -5739,7 +5768,7 @@ packages:
     dependencies:
       fast-glob: 3.3.2
       postcss: 8.4.32
-      tailwindcss: 3.4.0
+      tailwindcss: 3.4.0(ts-node@10.9.2)
     dev: true
 
   /eslint-plugin-unused-imports@3.0.0(@typescript-eslint/eslint-plugin@6.17.0)(eslint@8.56.0):
@@ -7599,7 +7628,7 @@ packages:
       - supports-color
     dev: true
 
-  /jest-cli@29.7.0(@types/node@18.15.5):
+  /jest-cli@29.7.0(@types/node@18.15.5)(ts-node@10.9.2):
     resolution: {integrity: sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==}
     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
     hasBin: true
@@ -7609,14 +7638,14 @@ packages:
       node-notifier:
         optional: true
     dependencies:
-      '@jest/core': 29.7.0
+      '@jest/core': 29.7.0(ts-node@10.9.2)
       '@jest/test-result': 29.7.0
       '@jest/types': 29.6.3
       chalk: 4.1.2
-      create-jest: 29.7.0(@types/node@18.15.5)
+      create-jest: 29.7.0(@types/node@18.15.5)(ts-node@10.9.2)
       exit: 0.1.2
       import-local: 3.1.0
-      jest-config: 29.7.0(@types/node@18.15.5)
+      jest-config: 29.7.0(@types/node@18.15.5)(ts-node@10.9.2)
       jest-util: 29.7.0
       jest-validate: 29.7.0
       yargs: 17.7.2
@@ -7627,7 +7656,7 @@ packages:
       - ts-node
     dev: true
 
-  /jest-config@29.7.0(@types/node@18.15.5):
+  /jest-config@29.7.0(@types/node@18.15.5)(ts-node@10.9.2):
     resolution: {integrity: sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==}
     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
     peerDependencies:
@@ -7662,12 +7691,13 @@ packages:
       pretty-format: 29.7.0
       slash: 3.0.0
       strip-json-comments: 3.1.1
+      ts-node: 10.9.2(@types/node@18.15.5)(typescript@5.3.3)
     transitivePeerDependencies:
       - babel-plugin-macros
       - supports-color
     dev: true
 
-  /jest-config@29.7.0(@types/node@18.19.5):
+  /jest-config@29.7.0(@types/node@18.19.5)(ts-node@10.9.2):
     resolution: {integrity: sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==}
     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
     peerDependencies:
@@ -7702,6 +7732,7 @@ packages:
       pretty-format: 29.7.0
       slash: 3.0.0
       strip-json-comments: 3.1.1
+      ts-node: 10.9.2(@types/node@18.15.5)(typescript@5.3.3)
     transitivePeerDependencies:
       - babel-plugin-macros
       - supports-color
@@ -7990,7 +8021,7 @@ packages:
       supports-color: 8.1.1
     dev: true
 
-  /jest@29.7.0(@types/node@18.15.5):
+  /jest@29.7.0(@types/node@18.15.5)(ts-node@10.9.2):
     resolution: {integrity: sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==}
     engines: {node: ^14.15.0 || ^16.10.0 || >=18.0.0}
     hasBin: true
@@ -8000,10 +8031,10 @@ packages:
       node-notifier:
         optional: true
     dependencies:
-      '@jest/core': 29.7.0
+      '@jest/core': 29.7.0(ts-node@10.9.2)
       '@jest/types': 29.6.3
       import-local: 3.1.0
-      jest-cli: 29.7.0(@types/node@18.15.5)
+      jest-cli: 29.7.0(@types/node@18.15.5)(ts-node@10.9.2)
     transitivePeerDependencies:
       - '@types/node'
       - babel-plugin-macros
@@ -8376,7 +8407,6 @@ packages:
 
   /make-error@1.3.6:
     resolution: {integrity: sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==}
-    dev: true
 
   /makeerror@1.0.12:
     resolution: {integrity: sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==}
@@ -9872,7 +9902,7 @@ packages:
       camelcase-css: 2.0.1
       postcss: 8.4.32
 
-  /postcss-load-config@4.0.2(postcss@8.4.32):
+  /postcss-load-config@4.0.2(postcss@8.4.32)(ts-node@10.9.2):
     resolution: {integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==}
     engines: {node: '>= 14'}
     peerDependencies:
@@ -9886,6 +9916,7 @@ packages:
     dependencies:
       lilconfig: 3.0.0
       postcss: 8.4.32
+      ts-node: 10.9.2(@types/node@18.15.5)(typescript@5.3.3)
       yaml: 2.3.4
 
   /postcss-nested@6.0.1(postcss@8.4.32):
@@ -11588,7 +11619,7 @@ packages:
       tslib: 2.5.0
     dev: true
 
-  /tailwindcss@3.4.0:
+  /tailwindcss@3.4.0(ts-node@10.9.2):
     resolution: {integrity: sha512-VigzymniH77knD1dryXbyxR+ePHihHociZbXnLZHUyzf2MMs2ZVqlUrZ3FvpXP8pno9JzmILt1sZPD19M3IxtA==}
     engines: {node: '>=14.0.0'}
     dependencies:
@@ -11609,7 +11640,7 @@ packages:
       postcss: 8.4.32
       postcss-import: 15.1.0(postcss@8.4.32)
       postcss-js: 4.0.1(postcss@8.4.32)
-      postcss-load-config: 4.0.2(postcss@8.4.32)
+      postcss-load-config: 4.0.2(postcss@8.4.32)(ts-node@10.9.2)
       postcss-nested: 6.0.1(postcss@8.4.32)
       postcss-selector-parser: 6.0.12
       resolve: 1.22.8
@@ -11842,7 +11873,7 @@ packages:
       bs-logger: 0.2.6
       esbuild: 0.19.11
       fast-json-stable-stringify: 2.1.0
-      jest: 29.7.0(@types/node@18.15.5)
+      jest: 29.7.0(@types/node@18.15.5)(ts-node@10.9.2)
       jest-util: 29.7.0
       json5: 2.2.3
       lodash.memoize: 4.1.2
@@ -11852,6 +11883,36 @@ packages:
       yargs-parser: 21.1.1
     dev: true
 
+  /ts-node@10.9.2(@types/node@18.15.5)(typescript@5.3.3):
+    resolution: {integrity: sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==}
+    hasBin: true
+    peerDependencies:
+      '@swc/core': '>=1.2.50'
+      '@swc/wasm': '>=1.2.50'
+      '@types/node': '*'
+      typescript: '>=2.7'
+    peerDependenciesMeta:
+      '@swc/core':
+        optional: true
+      '@swc/wasm':
+        optional: true
+    dependencies:
+      '@cspotcode/source-map-support': 0.8.1
+      '@tsconfig/node10': 1.0.11
+      '@tsconfig/node12': 1.0.11
+      '@tsconfig/node14': 1.0.3
+      '@tsconfig/node16': 1.0.4
+      '@types/node': 18.15.5
+      acorn: 8.11.3
+      acorn-walk: 8.2.0
+      arg: 4.1.3
+      create-require: 1.1.1
+      diff: 4.0.2
+      make-error: 1.3.6
+      typescript: 5.3.3
+      v8-compile-cache-lib: 3.0.1
+      yn: 3.1.1
+
   /tsconfig-paths@3.15.0:
     resolution: {integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==}
     dependencies:
@@ -12269,6 +12330,9 @@ packages:
       sade: 1.8.1
     dev: false
 
+  /v8-compile-cache-lib@3.0.1:
+    resolution: {integrity: sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==}
+
   /v8-to-istanbul@9.2.0:
     resolution: {integrity: sha512-/EH/sDgxU2eGxajKdwLCDmQ4FWq+kpi3uCmBGpw1xJtnAxEjlD8j8PEiGWpCIMIs3ciNAgH0d3TTJiUkYzyZjA==}
     engines: {node: '>=10.12.0'}
@@ -12602,6 +12666,10 @@ packages:
       fd-slicer: 1.1.0
     dev: true
 
+  /yn@3.1.1:
+    resolution: {integrity: sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==}
+    engines: {node: '>=6'}
+
   /yocto-queue@0.1.0:
     resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
     engines: {node: '>=10'}
diff --git a/frontend/src/api-client/services/ChatService.ts b/frontend/src/api-client/services/ChatService.ts
index 4e81ebb..2e755e4 100644
--- a/frontend/src/api-client/services/ChatService.ts
+++ b/frontend/src/api-client/services/ChatService.ts
@@ -67,6 +67,8 @@ export class ChatService {
    * @throws ApiError
    */
   public static agentChatApiV1ChatAgentPost(requestBody: IChatQuery): CancelablePromise<any> {
+    console.log("****** agentChatApiV1ChatAgentPost called with", requestBody)
+
     return __request(OpenAPI, {
       method: "POST",
       url: "/api/v1/chat/agent",
diff --git a/frontend/src/components/ConversationView/index.tsx b/frontend/src/components/ConversationView/index.tsx
index 92bd148..509bbdf 100644
--- a/frontend/src/components/ConversationView/index.tsx
+++ b/frontend/src/components/ConversationView/index.tsx
@@ -118,6 +118,19 @@ const ConversationView = () => {
       })
     }
 
+    console.log(
+      `Sending message to ${env.NEXT_PUBLIC_API_URL}/chat/agent with payload:`,
+      JSON.stringify({
+        messages: formatedMessageList,
+        api_key: localStorage.getItem("openaiApiKey") || undefined,
+        org_id: localStorage.getItem("openaiOrgId") || undefined,
+        conversation_id: currentConversation.id,
+        new_message_id: message.id,
+        user_email: session?.user?.name || "no-auth",
+        settings: settingsStore.setting,
+      })
+    )
+
     try {
       const rawRes = await fetch(`${env.NEXT_PUBLIC_API_URL}/chat/agent`, {
         method: "POST",
@@ -138,6 +151,7 @@ const ConversationView = () => {
           "Content-Type": "application/json",
         },
       })
+      console.log(rawRes)
 
       if (!rawRes.ok) {
         console.error(rawRes)
@@ -165,6 +179,7 @@ const ConversationView = () => {
       let done = false
       while (!done) {
         const { value, done: readerDone } = await reader.read()
+        console.log("value", value)
         if (value) {
           const { data_type, data, metadata } = value
           if (data && data.length > 0) {
@@ -183,13 +198,14 @@ const ConversationView = () => {
               }
             } else if (data_type === "llm") {
               message.content = message.content + data
+              console.log("message.content", message.content)
             } else {
               message.events.push(value)
             }
             messageStore.updateMessage(message.id, {
               content: message.content,
             })
-
+            console.log("message.content", message.content)
             // Check if the message is cancelled
             const updatedStatus = messageStore.getState().messageList.find((m) => m.id === message.id)?.status
             if (updatedStatus === "CANCELLED") break
diff --git a/launch_backup.json b/launch_backup.json
new file mode 100644
index 0000000..bdd974e
--- /dev/null
+++ b/launch_backup.json
@@ -0,0 +1,85 @@
+{
+  "version": "0.2.0",
+  "configurations": [
+    
+
+      {
+          "name": "Debug: Attach to FastAPI Docker",
+          "type": "python",
+          "request": "attach",
+          "host": "localhost",
+          "port": 5678,
+          "pathMappings": [
+              {
+                  "localRoot": "${workspaceFolder}/backend/app",
+                  "remoteRoot": "/code"
+              }
+          ],
+      },
+      {
+        "name": "Run current file",
+        "type": "python",
+        "request": "launch",
+        "program": "${file}",
+        "console": "integratedTerminal",
+        "envFile": "${workspaceFolder}/.env",
+        "externalConsole": true,
+    },
+    {
+      "type": "chrome",
+      "request": "launch",
+      "name": "Launch Chrome",
+      "url": "http://localhost:3000",
+      "webRoot": "${workspaceFolder}/src", // Adjust this path to match where your source files are relative to your workspace root
+      "sourceMaps": true,
+      "userDataDir": "${workspaceFolder}/.vscode/chrome",
+      "breakOnLoad": true,
+      "sourceMapPathOverrides": {
+        "webpack:///./src/*": "${webRoot}/*"
+      }
+  }
+  ]
+}
+
+// {
+//   "version": "0.2.0",
+//   "configurations": [
+
+//     {
+//       "name": "Debug: Attach to FastAPI Docker",
+//       "type": "python",
+//       "request": "attach",
+//       "host": "localhost",
+//       "port": 5678,
+//       "pathMappings": [
+//         {
+//           "localRoot": "${workspaceFolder}/backend/app",  // Adjust this path to your local backend source code directory
+//           "remoteRoot": "/code"  // Adjust this to match the path in the Docker container where your backend code resides
+//         }
+//       ]
+//     },
+//     {
+//       "name": "Run current file",
+//       "type": "python",
+//       "request": "launch",
+//       "program": "${file}",
+//       "console": "integratedTerminal",
+//       "envFile": "${workspaceFolder}/.env",
+//       "externalConsole": true,
+//       // "stopOnEntry": true,
+//     },
+//     {
+//       "type": "pwa-chrome",
+//       "request": "launch",
+//       "name": "Launch Chrome for Frontend Debugging",
+//       "url": "http://localhost:3000",  // Adjust this if your frontend runs on a different port
+//       "webRoot": "${workspaceFolder}/frontend/src",  // Adjust this path to where your frontend source files are located
+//       "sourceMaps": true,
+//       "breakOnLoad": true,
+//       // "stopOnEntry": true,
+//       "sourceMapPathOverrides": {
+//         "webpack:///src/*": "${webRoot}/*"
+//       }
+//     }
+//   ]
+// }
\ No newline at end of file
